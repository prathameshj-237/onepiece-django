trigger:
- main

variables:
  imageName: onepiece-django-app
  dockerfilePath: 'Dockerfile'
  acrLoginServer: onepieceacr.azurecr.io
  aksClusterName: onepiece-aks
  aksResourceGroup: onepiece_project
  namespace: default

pool:
  vmImage: 'ubuntu-latest'

stages:
# Stage 1: Build and Push Docker image
- stage: BuildAndPush
  displayName: Build and Push Docker Image to ACR
  jobs:
  - job: DockerBuild
    displayName: Build and Push Job
    steps:
    - checkout: self

    - task: Docker@2
      displayName: Build and Push to ACR
      inputs:
        containerRegistry: 'onepieceacr-connection'  # Must be a Docker Registry service connection
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'
        tags: |
          latest

# Stage 2: Deploy to AKS
- stage: DeployToAKS
  displayName: Deploy to Azure Kubernetes Service
  dependsOn: BuildAndPush
  jobs:
  - job: DeployJob
    displayName: Deploy to AKS
    steps:
    - task: AzureCLI@2
      displayName: 'Login to AKS and set context'
      inputs:
        azureSubscription: 'onepiece-azure-subscription'  # AzureRM service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --overwrite-existing

    - task: KubernetesManifest@1
      displayName: 'Deploy to AKS using manifest'
      inputs:
        action: deploy
        kubernetesServiceConnection: 'onepiece-k8s-connection'  # This must be a Kubernetes service connection
        namespace: '$(namespace)'
        manifests: |
          k8s/deployment.yaml

    - task: Kubernetes@1
      displayName: 'Apply Service YAML'
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'onepiece-k8s-connection'
        namespace: 'default'
        command: apply
        useConfigurationFile: true
        configuration: 'k8s/service.yaml'